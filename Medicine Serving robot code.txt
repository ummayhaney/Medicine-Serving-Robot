#include <Servo.h>          //Servo motor library. This is standard library
#include <NewPing.h>        //Ultrasonic sensor function library. You must install this library
#include <SoftwareSerial.h>
SoftwareSerial bluetooth(0,1);

//our L298N control pins
const int LeftMotorForward = 7;
const int LeftMotorBackward = 6;
const int RightMotorForward = 5;
const int RightMotorBackward = 4;

//sensor pins
#define trig_pin A0 //analog input 1
#define echo_pin A1 //analog input 2

#define maximum_distance 200
boolean goesForward = false;
int distance = 100;

NewPing sonar(trig_pin, echo_pin, maximum_distance); //sensor function
Servo servo_motor; //our servo name
String t;

void setup(){
//Serial.begin(9600);
  bluetooth.begin(9600);
  pinMode(RightMotorForward, OUTPUT);
  pinMode(LeftMotorForward, OUTPUT);
  pinMode(LeftMotorBackward, OUTPUT);
  pinMode(RightMotorBackward, OUTPUT);
 
  servo_motor.attach(10); //our servo pin

  servo_motor.write(115);
  delay(2000);
  distance = readPing();
  delay(100);
  distance = readPing();
  delay(100);
  distance = readPing();
  delay(100);
  distance = readPing();
  delay(100);
}

void loop(){
  int distanceRight = 0;
  int distanceLeft = 0;
  delay(50);

if(bluetooth.available()>0)
{
  t = bluetooth.readString();
  Serial.println(t);
}
if(t=="go forward")
  {
      if (distance <= 35){
      moveStop();
      delay(200);
      moveBackward();
      delay(400);
      moveStop();
      delay(300);
      distanceRight = lookRight();
      delay(300);
      distanceLeft = lookLeft();
      delay(300);

      if (distance >= distanceLeft){
        turnRight();
        moveStop();
      }
      else{
        turnLeft();
        moveStop();
      }
    }
    else{
       moveForward();
    }
      distance = readPing();
    }
    else if(t=="go backward"){
      moveBackward();
      }
    else if(t=="left")
        {
          digitalWrite(LeftMotorBackward, HIGH);
          digitalWrite(RightMotorForward, HIGH);
          digitalWrite(LeftMotorForward, LOW);
          digitalWrite(RightMotorBackward, LOW);
          delay(250);
          digitalWrite(LeftMotorBackward, LOW);
          digitalWrite(RightMotorForward, LOW);
        }
        else if(t=="right")
        {
          digitalWrite(LeftMotorBackward, LOW);
          digitalWrite(RightMotorForward, LOW);
          digitalWrite(LeftMotorForward, HIGH);
          digitalWrite(RightMotorBackward, HIGH);
          delay(250);
          digitalWrite(LeftMotorForward, LOW);
          digitalWrite(RightMotorBackward, LOW);
        }
        else if(t=="stop"){
          moveStop();
        }
    }

int lookRight(){  
  servo_motor.write(50);
  delay(500);
  int distance = readPing();
  delay(100);
  servo_motor.write(115);
  return distance;
}

int lookLeft(){
  servo_motor.write(170);
  delay(500);
  int distance = readPing();
  delay(100);
  servo_motor.write(115);
  return distance;
  delay(100);
}

int readPing(){
  delay(70);
  int cm = sonar.ping_cm();
  if (cm==0){
    cm=250;
  }
  return cm;
}

void moveStop(){
 
  digitalWrite(RightMotorForward, LOW);
  digitalWrite(LeftMotorForward, LOW);
  digitalWrite(RightMotorBackward, LOW);
  digitalWrite(LeftMotorBackward, LOW);
}

void moveForward(){

  if(!goesForward){

    goesForward=true;
   
    digitalWrite(LeftMotorForward, HIGH);
    digitalWrite(RightMotorForward, HIGH);
 
    digitalWrite(LeftMotorBackward, LOW);
    digitalWrite(RightMotorBackward, LOW);
  }
}

void moveBackward(){

  goesForward=false;

  digitalWrite(LeftMotorBackward, HIGH);
  digitalWrite(RightMotorBackward, HIGH);
 
  digitalWrite(LeftMotorForward, LOW);
  digitalWrite(RightMotorForward, LOW);
 
}

void turnRight(){

  digitalWrite(LeftMotorForward, HIGH);
  digitalWrite(RightMotorBackward, HIGH);
 
  digitalWrite(LeftMotorBackward, LOW);
  digitalWrite(RightMotorForward, LOW);
 
  delay(250);
 
  digitalWrite(LeftMotorForward, HIGH);
  digitalWrite(RightMotorForward, HIGH);
 
  digitalWrite(LeftMotorBackward, LOW);
  digitalWrite(RightMotorBackward, LOW);
 
}

void turnLeft(){

  digitalWrite(LeftMotorBackward, HIGH);
  digitalWrite(RightMotorForward, HIGH);
 
  digitalWrite(LeftMotorForward, LOW);
  digitalWrite(RightMotorBackward, LOW);

  delay(250);
 
  digitalWrite(LeftMotorForward, HIGH);
  digitalWrite(RightMotorForward, HIGH);
 
  digitalWrite(LeftMotorBackward, LOW);
  digitalWrite(RightMotorBackward, LOW);
}

code for talking robot:
int rec=2;
int play=3;
int sensor=4;


void setup() 
{
pinMode(rec,OUTPUT);
pinMode(play,OUTPUT);

pinMode(sensor,INPUT);

digitalWrite(rec,LOW);
digitalWrite(play,LOW);

if(digitalRead(sensor))
{
 while(digitalRead(sensor));
}
}

void loop() 
{

if(digitalRead(sensor))
{
  
  digitalWrite(rec,HIGH);
  delay(5000);
  
  digitalWrite(rec,LOW);
  delay(1000);
  digitalWrite(play,HIGH);
  delay(6000);
  digitalWrite(play,LOW);
  while(digitalRead(sensor));
}
}
